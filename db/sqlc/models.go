// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0

package bankdb

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type TransactionsType string

const (
	TransactionsTypeCredit TransactionsType = "credit"
	TransactionsTypeDebit  TransactionsType = "debit"
)

func (e *TransactionsType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = TransactionsType(s)
	case string:
		*e = TransactionsType(s)
	default:
		return fmt.Errorf("unsupported scan type for TransactionsType: %T", src)
	}
	return nil
}

type NullTransactionsType struct {
	TransactionsType TransactionsType
	Valid            bool // Valid is true if String is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullTransactionsType) Scan(value interface{}) error {
	if value == nil {
		ns.TransactionsType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.TransactionsType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullTransactionsType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return ns.TransactionsType, nil
}

type Account struct {
	ID       int32         `json:"id"`
	Balance  int64         `json:"balance"`
	Currency string        `json:"currency"`
	Owner    sql.NullInt32 `json:"owner"`
}

type Owner struct {
	ID           int32     `json:"id"`
	CreatedAt    time.Time `json:"created_at"`
	OwnerDetails int32     `json:"owner_details"`
}

type OwnerDetail struct {
	ID      int32          `json:"id"`
	Name    string         `json:"name"`
	Age     sql.NullInt32  `json:"age"`
	Image   sql.NullString `json:"image"`
	Country sql.NullString `json:"country"`
}

type Transaction struct {
	ID        int32            `json:"id"`
	Type      TransactionsType `json:"type"`
	CreatedAt sql.NullTime     `json:"created_at"`
	Amount    int64            `json:"amount"`
	Account   int32            `json:"account"`
}

type Transfer struct {
	ID          int32        `json:"id"`
	Amount      int64        `json:"amount"`
	ToAccount   int32        `json:"to_account"`
	FromAccount int32        `json:"from_account"`
	CreatedAt   sql.NullTime `json:"created_at"`
}
